/*
* Project:  Feographia
* Purpose:  Mobile application to work with the biblical text
* Authors:  NikitaFeodonit, nfeodonit@yandex.com
* ****************************************************************************
* Copyright (C) 2015 NikitaFeodonit
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.model.application'


model {
    android {
        compileSdkVersion = 23
        buildToolsVersion = "23.0.1"

        defaultConfig.with {
            applicationId = "ru.feographia"
            minSdkVersion.apiLevel = 9
            targetSdkVersion.apiLevel = 23
            versionCode = 1
            versionName = "0.1"
        }


        task capnpBuild(type: Exec) {
            workingDir file('src/main/java/ru/feographia/capnproto')
            commandLine getWinCmd(), getWinCmdArg(), getCapnpCmd()
        }

        tasks.withType(JavaCompile) {
            compileTask -> compileTask.dependsOn capnpBuild
        }
    }

    android.buildTypes {
        release {
            minifyEnabled = false
            proguardFiles.add(file('proguard-rules.pro'))

// TODO: not work with new experimental gradle
//            applicationVariants.all { variant ->
//                variant.outputs.each { output ->
//                    output.outputFile = new File(output.outputFile.parent, "feographia_" + defaultConfig.versionName + ".apk")
//                }
//            }
        }
    }

}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':fcore')
    compile project(':jzmq')
    compile project(':capnproto-java')
    compile 'com.android.support:appcompat-v7:23.0.1'
    compile 'com.android.support:support-v4:23.0.1'
}


def getWinCmd() {
    def winCmd = ""
    if (Os.isFamily(Os.FAMILY_WINDOWS))
        winCmd = "cmd"
    return winCmd
}


def getWinCmdArg() {
    def winCmdArg = ""
    if (Os.isFamily(Os.FAMILY_WINDOWS))
        winCmdArg = "/c"
    return winCmdArg
}


def getCapnpCmd() {
// TODO: for linux
    def capnpCmd = ""
    if (Os.isFamily(Os.FAMILY_WINDOWS))
        capnpCmd = "..\\..\\..\\..\\..\\..\\..\\fcore\\src\\fcore\\capnproto\\capnp-main.cmd"
    return capnpCmd
}
